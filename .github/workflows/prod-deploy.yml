name: Prod Deploy

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ROLE: ${{ secrets.AWS_ROLE }}
  AWS_TFSTATE_BUCKET_NAME: ${{ secrets.AWS_TFSTATE_BUCKET_NAME }}
  AWS_TFSTATE_BUCKET_KEY_NAME: ${{ secrets.AWS_TFSTATE_BUCKET_KEY_NAME }}
  TF_VAR_openai_api_key: ${{ secrets.OPENAI_API_KEY }}
  TF_VAR_cloudfront_referer_header: ${{ secrets.CLOUDFRONT_REFERER_HEADER }}
  TF_LOG: INFO

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra/prod

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{env.AWS_REGION}}
          role-to-assume: ${{env.AWS_ROLE}}
          role-session-name: GitHub-OIDC-TERRAFORM

      - name: Package Frontend
        run: ./package_frontend.sh

      - name: Package Lambdas
        run: cd .. && ./package_lambdas.sh prod && cd prod

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.0

      - name: Initialize Terraform
        run: terraform init -backend-config="bucket=${{env.AWS_TFSTATE_BUCKET_NAME}}" -backend-config="key=${{env.AWS_TFSTATE_BUCKET_KEY_NAME}}" -backend-config="region=${{env.AWS_REGION}}"

      - name: Validate Terraform
        run: terraform validate

      - name: Plan Terraform
        run: terraform plan -var-file="prod.tfvars"

      - name: Deploy Terraform
        run: terraform apply -var-file="prod.tfvars" -auto-approve
